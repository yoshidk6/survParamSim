[{"path":"https://yoshidk6.github.io/survParamSim/articles/survParamSim.html","id":"fit-model-with-survreg-function","dir":"Articles","previous_headings":"","what":"Fit model with survreg() function","title":"survParamSim","text":"running parametric survival simulation, need fit model data using survreg() function survival package. vignette, using colon dataset available survival package, treatment effect adjuvant Levamisole+5-FU colon cancer placebo evaluated. First, load data data wrangling. Shown Kaplan-Meier curves visually checking data. second plot looking many censoring time. Looks like fairly uniform censoring 1800 3000 days - attributable steady clinical study enrollment.   Next fit lognormal parametric model data. using node4 depth additional covariates addition treatment (rx). can see factor strong association outcome.","code":"# ref for dataset https://vincentarelbundock.github.io/Rdatasets/doc/survival/colon.html colon2 <-    as_tibble(colon) %>%    # recurrence only and not including Lev alone arm   filter(rx != \"Lev\",          etype == 1) %>%    # Same definition as Lin et al, 1994   mutate(rx = factor(rx, levels = c(\"Obs\", \"Lev+5FU\")),          depth = as.numeric(extent <= 2)) survfit.colon <- survfit(Surv(time, status) ~ rx, data = colon2) survminer::ggsurvplot(survfit.colon) survfit.colon.censor <- survfit(Surv(time, 1-status) ~ rx, data = colon2) survminer::ggsurvplot(survfit.colon.censor) fit.colon <- survreg(Surv(time, status) ~ rx + node4 + depth,                       data = colon2, dist = \"lognormal\")  summary(fit.colon) #>  #> Call: #> survreg(formula = Surv(time, status) ~ rx + node4 + depth, data = colon2,  #>     dist = \"lognormal\") #>               Value Std. Error     z       p #> (Intercept)  7.5103     0.1343 55.92 < 2e-16 #> rxLev+5FU    0.7606     0.1677  4.54 5.7e-06 #> node4       -1.3474     0.1816 -7.42 1.2e-13 #> depth        1.1243     0.2661  4.22 2.4e-05 #> Log(scale)   0.6040     0.0461 13.10 < 2e-16 #>  #> Scale= 1.83  #>  #> Log Normal distribution #> Loglik(model)= -2561.7   Loglik(intercept only)= -2607.6 #>  Chisq= 91.8 on 3 degrees of freedom, p= 9e-20  #> Number of Newton-Raphson Iterations: 4  #> n= 619"},{"path":"https://yoshidk6.github.io/survParamSim/articles/survParamSim.html","id":"perform-simulation","dir":"Articles","previous_headings":"","what":"Perform simulation","title":"survParamSim","text":"surv_param_sim() main function package takes survreg object described . also require supply newdata, required even new - .e. data used survreg() surv_param_sim(). : 1. Re-sample coefficients parametric survival model variance-covariance matrix n.rep times. 2. Perform survival time subjects newdata corresponding covariates, using one resampled coefficients. Also generate censoring time according censor.dur (NULL), replace simulated survival time censoring time earlier. 4. Repeat steps 2. n.rep times. simulation performed, can either extract raw simulation results calculate Kaplan-Meier estimates hazard ratio treatment effect, see type sim console.","code":"sim <-    surv_param_sim(object = fit.colon, newdata = colon2,                   # Simulate censoring according to the plot above                  censor.dur = c(1800, 3000),                  # Simulate only 100 times to make the example go fast                  n.rep = 100) sim #> ---- Simulated survival data with the following model ---- #> survreg(formula = Surv(time, status) ~ rx + node4 + depth, data = colon2,  #>     dist = \"lognormal\") #>  #> * Use `extract_sim()` function to extract individual simulated survivals #> * Use `calc_km_pi()` function to get survival curves and median survival time #> * Use `calc_hr_pi()` function to get hazard ratio #>  #> * Settings: #>     #simulations: 100  #>     #subjects: 619 (without NA in model variables)"},{"path":"https://yoshidk6.github.io/survParamSim/articles/survParamSim.html","id":"survival-time-profile","dir":"Articles","previous_headings":"","what":"Survival time profile","title":"survParamSim","text":"calculate survival curves simulated dataset, calc_ave_km_pi() calc_km_pi() can used simulated object . Similar raw simulated object, can options processing - one plotting prediction intervals plot_km_pi() function.  providing median survival summary table extract_medsurv_pi() function. functionality available calc_km_pi() output implemented calc_ave_km_pi() yet.. Plot can also made subgroups. can see prediction interval wide (depth: 1 & nodes4: 1) group, mainly due small number subjects","code":"km.pi <- calc_km_pi(sim, trt = \"rx\") #> Warning in calc_km_pi(sim, trt = \"rx\"): 70 of 200 simulations (#rep * #trt * #> #group) did not reach median survival time and these are not included for #> prediction interval calculation. You may want to delay the `censor.dur` in #> simulation. km.pi #> ---- Simulated and observed (if calculated) survival curves ---- #> * Use `extract_medsurv_pi()` to extract prediction intervals of median survival times #> * Use `extract_km_pi()` to extract prediction intervals of K-M curves #> * Use `plot_km_pi()` to draw survival curves #>  #> * Settings: #>     trt: rx  #>     group: NA  #>     pi.range: 0.95  #>     calc.obs: TRUE  #>     method: K-M on simulated survival using `calc_km_pi()` plot_km_pi(km.pi) +   theme(legend.position = \"bottom\") +   labs(y = \"Recurrence free rate\") +   expand_limits(y = 0) extract_medsurv_pi(km.pi) #> # A tibble: 8 × 5 #>   rx          n description median quantile #>   <fct>   <dbl> <chr>        <dbl>    <dbl> #> 1 Obs       315 pi_low       1108.   0.0250 #> 2 Obs       315 pi_med       1538.   0.5    #> 3 Obs       315 pi_high      2113.   0.975  #> 4 Obs       315 obs          1236   NA      #> 5 Lev+5FU   304 pi_low       2126.   0.0250 #> 6 Lev+5FU   304 pi_med       2697.   0.5    #> 7 Lev+5FU   304 pi_high      2927.   0.975  #> 8 Lev+5FU   304 obs            NA   NA km.pi <- calc_km_pi(sim, trt = \"rx\", group = c(\"node4\", \"depth\")) #> Warning in calc_km_pi(sim, trt = \"rx\", group = c(\"node4\", \"depth\")): 339 of 800 #> simulations (#rep * #trt * #group) did not reach median survival time and these #> are not included for prediction interval calculation. You may want to delay the #> `censor.dur` in simulation.  plot_km_pi(km.pi) +   theme(legend.position = \"bottom\") +   labs(y = \"Recurrence free rate\") +   expand_limits(y = 0)"},{"path":"https://yoshidk6.github.io/survParamSim/articles/survParamSim.html","id":"hazard-ratios-hrs","dir":"Articles","previous_headings":"","what":"Hazard ratios (HRs)","title":"survParamSim","text":"calculate prediction intervals HRs, calc_ave_hr_pi() calc_hr_pi() can used simulated object . generated subgroups based “depth”, since small N (depth: 1 & nodes4: 1) can cause issue calculating HRs.  can also extract prediction intervals observed HR extract_hr_pi() function.","code":"hr.pi <- calc_hr_pi(sim, trt = \"rx\", group = c(\"depth\"))  hr.pi #> ---- Simulated and observed (if calculated) hazard ratio ---- #> * Use `extract_hr_pi()` to extract prediction intervals and observed HR #> * Use `extract_hr()` to extract individual simulated HRs #> * Use `plot_hr_pi()` to draw histogram of predicted HR #>  #> * Settings: #>     trt: rx #>          ('Lev+5FU' as test trt, 'Obs' as control) #>     group: depth  #>     pi.range: 0.95  #>     calc.obs: TRUE  #>     method: Cox on simulated survival using `calc_hr_pi()` plot_hr_pi(hr.pi) extract_hr_pi(hr.pi) #> # A tibble: 8 × 5 #>   depth rx      description    HR quantile #>   <dbl> <fct>   <chr>       <dbl>    <dbl> #> 1     0 Lev+5FU pi_low      0.464   0.0250 #> 2     0 Lev+5FU pi_med      0.624   0.5    #> 3     0 Lev+5FU pi_high     0.794   0.975  #> 4     0 Lev+5FU obs         0.590  NA      #> 5     1 Lev+5FU pi_low      0.233   0.0250 #> 6     1 Lev+5FU pi_med      0.597   0.5    #> 7     1 Lev+5FU pi_high     1.13    0.975  #> 8     1 Lev+5FU obs         0.607  NA"},{"path":"https://yoshidk6.github.io/survParamSim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenta Yoshida. Author, maintainer. Laurent Claret. Author.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yoshida K, Claret L (2023). survParamSim: Parametric Survival Simulation Parameter Uncertainty. https://github.com/yoshidk6/survParamSim, https://yoshidk6.github.io/survParamSim/.","code":"@Manual{,   title = {survParamSim: Parametric Survival Simulation with Parameter Uncertainty},   author = {Kenta Yoshida and Laurent Claret},   year = {2023},   note = {https://github.com/yoshidk6/survParamSim, https://yoshidk6.github.io/survParamSim/}, }"},{"path":"https://yoshidk6.github.io/survParamSim/index.html","id":"survparamsim","dir":"","previous_headings":"","what":"Parametric Survival Simulation with Parameter Uncertainty","title":"Parametric Survival Simulation with Parameter Uncertainty","text":"goal survParamSim perform survival simulation parametric survival model generated ‘survreg’ function ‘survival’ package. simulation, coefficients resampled variance-covariance matrix parameter estimates, order capture uncertainty model parameters.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Parametric Survival Simulation with Parameter Uncertainty","text":"can install package CRAN. Alternatively, can install development version GitHub.","code":"install.packages(\"survParamSim\") # install.packages(\"devtools\") devtools::install_github(\"yoshidk6/survParamSim\")"},{"path":"https://yoshidk6.github.io/survParamSim/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Parametric Survival Simulation with Parameter Uncertainty","text":"GitHub pages contains function references vignette. example sneak peek example outputs. First, run survreg fit parametric survival model: Next, run parametric bootstrap simulation: Calculate survival curves prediction intervals:  Calculate hazard ratios prediction intervals:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(survival) library(survParamSim) #> Warning: package 'survParamSim' was built under R version 4.2.3  set.seed(12345)  # ref for dataset https://vincentarelbundock.github.io/Rdatasets/doc/survival/colon.html colon2 <-    as_tibble(colon) %>%    # recurrence only and not including Lev alone arm   filter(rx != \"Lev\",          etype == 1) %>%    # Same definition as Lin et al, 1994   mutate(rx = factor(rx, levels = c(\"Obs\", \"Lev+5FU\")),          depth = as.numeric(extent <= 2)) fit.colon <- survreg(Surv(time, status) ~ rx + node4 + depth,                       data = colon2, dist = \"lognormal\") sim <-    surv_param_sim(object = fit.colon, newdata = colon2,                   censor.dur = c(1800, 3000),                  # Simulating only 100 times to make the example go fast                  n.rep = 100)  sim #> ---- Simulated survival data with the following model ---- #> survreg(formula = Surv(time, status) ~ rx + node4 + depth, data = colon2,  #>     dist = \"lognormal\") #>  #> * Use `extract_sim()` function to extract individual simulated survivals #> * Use `calc_km_pi()` function to get survival curves and median survival time #> * Use `calc_hr_pi()` function to get hazard ratio #>  #> * Settings: #>     #simulations: 100  #>     #subjects: 619 (without NA in model variables) km.pi <- calc_km_pi(sim, trt = \"rx\", group = c(\"node4\", \"depth\")) #> Warning in calc_km_pi(sim, trt = \"rx\", group = c(\"node4\", \"depth\")): 339 of 800 #> simulations (#rep * #trt * #group) did not reach median survival time and these #> are not included for prediction interval calculation. You may want to delay the #> `censor.dur` in simulation.  km.pi #> ---- Simulated and observed (if calculated) survival curves ---- #> * Use `extract_medsurv_pi()` to extract prediction intervals of median survival times #> * Use `extract_km_pi()` to extract prediction intervals of K-M curves #> * Use `plot_km_pi()` to draw survival curves #>  #> * Settings: #>     trt: rx  #>     group: node4  #>     pi.range: 0.95  #>     calc.obs: TRUE plot_km_pi(km.pi) +   theme(legend.position = \"bottom\") +   labs(y = \"Recurrence free rate\") +   expand_limits(y = 0) extract_medsurv_pi(km.pi) # Not implemented for calc_ave_km_pi yet; available for calc_km_pi #> # A tibble: 32 × 7 #>    node4 depth rx          n description median quantile #>    <dbl> <dbl> <fct>   <dbl> <chr>        <dbl>    <dbl> #>  1     0     0 Obs       193 pi_low       1257.   0.0250 #>  2     0     0 Obs       193 pi_med       1895.   0.5    #>  3     0     0 Obs       193 pi_high      2713.   0.975  #>  4     0     0 Obs       193 obs          1436   NA      #>  5     0     0 Lev+5FU   192 pi_low       2429.   0.0250 #>  6     0     0 Lev+5FU   192 pi_med       2716.   0.5    #>  7     0     0 Lev+5FU   192 pi_high      2908.   0.975  #>  8     0     0 Lev+5FU   192 obs            NA   NA      #>  9     0     1 Obs        35 pi_low       1539.   0.0250 #> 10     0     1 Obs        35 pi_med       2558.   0.5    #> # … with 22 more rows hr.pi <- calc_hr_pi(sim, trt = \"rx\", group = c(\"depth\"))  hr.pi #> ---- Simulated and observed (if calculated) hazard ratio ---- #> * Use `extract_hr_pi()` to extract prediction intervals and observed HR #> * Use `extract_hr()` to extract individual simulated HRs #> * Use `plot_hr_pi()` to draw histogram of predicted HR #>  #> * Settings: #>     trt: rx #>          ('Lev+5FU' as test trt, 'Obs' as control) #>     group: depth  #>     pi.range: 0.95  #>     calc.obs: TRUE plot_hr_pi(hr.pi) extract_hr_pi(hr.pi) #> # A tibble: 8 × 5 #>   depth rx      description    HR quantile #>   <dbl> <fct>   <chr>       <dbl>    <dbl> #> 1     0 Lev+5FU pi_low      0.464   0.0250 #> 2     0 Lev+5FU pi_med      0.624   0.5    #> 3     0 Lev+5FU pi_high     0.794   0.975  #> 4     0 Lev+5FU obs         0.590  NA      #> 5     1 Lev+5FU pi_low      0.233   0.0250 #> 6     1 Lev+5FU pi_med      0.597   0.5    #> 7     1 Lev+5FU pi_high     1.13    0.975  #> 8     1 Lev+5FU obs         0.607  NA"},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_hr_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate hazard ratio with prediction intervals from parametric bootstrap simulation — calc_ave_hr_pi","title":"Generate hazard ratio with prediction intervals from parametric bootstrap simulation — calc_ave_hr_pi","text":"Generate hazard ratio prediction intervals parametric bootstrap simulation","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_hr_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate hazard ratio with prediction intervals from parametric bootstrap simulation — calc_ave_hr_pi","text":"","code":"calc_ave_hr_pi(   sim,   trt,   group = NULL,   pi.range = 0.95,   calc.obs = TRUE,   trt.assign = c(\"default\", \"reverse\"),   simtimelast = NULL,   boot.subj = TRUE )  calc_hr_pi(   sim,   trt,   group = NULL,   pi.range = 0.95,   calc.obs = TRUE,   trt.assign = c(\"default\", \"reverse\") )"},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_hr_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate hazard ratio with prediction intervals from parametric bootstrap simulation — calc_ave_hr_pi","text":"sim survparamsim class object generated surv_param_sim() function. trt string specify column define treatment status calculate HR. group Optional string(s) specify grouping variable(s). faceted histograms variables plot_hr_pi() function. pi.range Prediction interval simulated HR. calc.obs logical specify whether calculate HR observed data. Need set FALSE survival information newdata dummy. trt.assign Specify categories trt need considered control group. See details two categories. simtimelast optional numeric specify duration average HR calculation. NULL (default), last observation time newdata used. boot.subj Boolean specify whether bootstrapping subjects performed calculating HR. Default TRUE.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_hr_pi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate hazard ratio with prediction intervals from parametric bootstrap simulation — calc_ave_hr_pi","text":"calc_hr_pi() calculate hazard ratio using simulated survival times Cox proportional hazard model, calc_ave_hr_pi() calculate \"average\" hazard ratio using mean survival & probability density function per treatment groups. trt two categories/levels want specify one use reference group, can convert column factor newdata input surv_param_sim(). first level used reference group.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_km_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Kaplan-Meier curves with prediction intervals using simulated survival time — calc_ave_km_pi","title":"Generate Kaplan-Meier curves with prediction intervals using simulated survival time — calc_ave_km_pi","text":"Generate Kaplan-Meier curves prediction intervals using simulated survival time","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_km_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Kaplan-Meier curves with prediction intervals using simulated survival time — calc_ave_km_pi","text":"","code":"calc_ave_km_pi(   sim,   trt = NULL,   group = NULL,   pi.range = 0.95,   calc.obs = TRUE,   simtimelast = NULL,   trt.assign = c(\"default\", \"reverse\"),   boot.subj = TRUE,   calc.median.surv = FALSE )  calc_km_pi(   sim,   trt = NULL,   group = NULL,   pi.range = 0.95,   calc.obs = TRUE,   simtimelast = NULL,   trt.assign = c(\"default\", \"reverse\") )"},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_km_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Kaplan-Meier curves with prediction intervals using simulated survival time — calc_ave_km_pi","text":"sim survparamsim class object generated surv_param_sim() function. trt optional string specify column define treatment status. survival curves different colors plot_km_pi() function. group Optional string(s) specify grouping variable(s). faceted survival curves variables plot_km_pi() function. pi.range Prediction interval simulated survival curves. calc.obs logical specify whether KM estimates performed observed data. Need set FALSE survival information newdata dummy. simtimelast optional numeric specify last simulation time survival curve. NULL (default), last observation time newdata used. trt.assign Specify categories trt need considered control group. See details two categories. applicable use extract_medsurv_delta_pi() extract delta median survival times. boot.subj Boolean specify whether bootstrapping subjects performed calculating HR. Default TRUE. calc.median.surv Whether calculate median survival time calc_ave_km_pi(). Default FALSE calculation can long. Currently median survival calculation implemented yet.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/calculate_km_pi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Kaplan-Meier curves with prediction intervals using simulated survival time — calc_ave_km_pi","text":"calc_km_pi() calculate survival profile using simulated survival times Kaplan-Meier estimates, calc_ave_km_pi() calculate \"average\" survival using mean survival function per treatment groups. calc_ave_km_pi() actually rely Kaplan-Meier estimates directly uses underlying parametric survival model, however function km naming consistency. trt two categories/levels want specify one use reference group, can convert column factor newdata input surv_param_sim(). first level used reference group.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to extract prediction intervals and observed data — extractpi","title":"Functions to extract prediction intervals and observed data — extractpi","text":"Functions extract prediction intervals observed data","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to extract prediction intervals and observed data — extractpi","text":"","code":"extract_hr_pi(hr.pi, outtype = c(\"long\", \"wide\"))  extract_km_pi(km.pi, trunc.sim.censor = TRUE)  extract_medsurv_pi(km.pi, outtype = c(\"long\", \"wide\"))  extract_medsurv_delta_pi(km.pi, outtype = c(\"long\", \"wide\"))"},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to extract prediction intervals and observed data — extractpi","text":"hr.pi return object calc_hr_pi() function. outtype Specifies whether output long wide format. km.pi return object calc_km_pi() function. trunc.sim.censor logical specifying whether truncate simulated curve last time censor.dur specified surv_param_sim().","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to extract prediction intervals and observed data — extractpi","text":"extract_hr_pi() extracts prediction intervals simulated hazard ratios corresponding observed values. extract_km_pi() extracts prediction intervals simulated Kaplan-Meier curves. extract_medsurv_pi() extracts prediction intervals median survival times corresponding observed values. extract_medsurv_delta_pi() extracts prediction intervals delta median survival times treatment groups","code":""},{"path":[]},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to extract prediction intervals and observed data — extract_median_surv","text":"","code":"extract_median_surv(km.pi, outtype = c(\"long\", \"wide\"))"},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to extract prediction intervals and observed data — extract_median_surv","text":"km.pi return object calc_km_pi() function. outtype Specifies whether output long wide format.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractpi_deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to extract prediction intervals and observed data — extract_median_surv","text":"extract_median_surv() renamed extract_medsurv_pi() function name consistency. extract_median_surv() extracts prediction intervals median survival times corresponding observed values.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractrawsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to extract raw simulated samples — extractrawsim","title":"Functions to extract raw simulated samples — extractrawsim","text":"Functions extract raw simulated samples","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractrawsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to extract raw simulated samples — extractrawsim","text":"","code":"extract_sim(sim)  extract_hr(hr.pi)  extract_km_obs(km.pi)  extract_medsurv(km.pi)  extract_medsurv_delta(km.pi)"},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractrawsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to extract raw simulated samples — extractrawsim","text":"sim survparamsim class object generated surv_param_sim() function. hr.pi return object calc_hr_pi() function. km.pi return object calc_km_pi() function.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/extractrawsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to extract raw simulated samples — extractrawsim","text":"extract_sim() extracts raw survival time & event status simulated subjects. extract_hr() extracts simulated HR repeated simulations. HR calculated based simulated survival times calc_hr_pi() function, also returns p values Cox regression fits, one group based Wald test another overall significance coefficient based logrank test. latter values across treatment groups >2 levels treatment extract_km_obs() extracts observed Kaplan-Meier curves. extract_medsurv() extracts simulated median survival times repeated simulations extract_medsurv_delta() extracts delta median survival times treatment groups","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_hr_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot simulated HR histogram(s) overlayed with prediction intervals — plot_hr_pi","title":"Plot simulated HR histogram(s) overlayed with prediction intervals — plot_hr_pi","text":"Plot simulated HR histogram(s) overlayed prediction intervals","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_hr_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot simulated HR histogram(s) overlayed with prediction intervals — plot_hr_pi","text":"","code":"plot_hr_pi(hr.pi, show.obs = TRUE)"},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_hr_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot simulated HR histogram(s) overlayed with prediction intervals — plot_hr_pi","text":"hr.pi return object calc_hr_pi function. show.obs logical specifying whether show observed HR plot. effect calc.obs set FALSE calc_hr_pi.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_km_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Kaplan-Meier curves with prediction intervals from parametric bootstrap simulation — plot_km_pi","title":"Plot Kaplan-Meier curves with prediction intervals from parametric bootstrap simulation — plot_km_pi","text":"Need think apply subgroups","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_km_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Kaplan-Meier curves with prediction intervals from parametric bootstrap simulation — plot_km_pi","text":"","code":"plot_km_pi(km.pi, show.obs = TRUE, trunc.sim.censor = TRUE)"},{"path":"https://yoshidk6.github.io/survParamSim/reference/plot_km_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Kaplan-Meier curves with prediction intervals from parametric bootstrap simulation — plot_km_pi","text":"km.pi output calc_km_pi function. show.obs logical specifying whether show observed K-M curve plot. effect calc.obs set FALSE calc_km_pi. trunc.sim.censor logical specifying whether truncate simulated curve last time censor.dur specified surv_param_sim.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/surv_param_sim_pre_resampled.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","title":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","text":"Simulation parametric survival model already-resampled dataset","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/surv_param_sim_pre_resampled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","text":"","code":"surv_param_sim_pre_resampled(   object,   newdata.resampled,   newdata.orig = NULL,   censor.dur = NULL,   coef.var = TRUE,   na.warning = TRUE )"},{"path":"https://yoshidk6.github.io/survParamSim/reference/surv_param_sim_pre_resampled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","text":"object survreg class object. Currently accept exponential, lognormal, weibull, loglogistic, gaussian distributions. newdata.resampled required input, already resampled dataset simulation. dataset must : () rep variable indicating #simulation groups, (b) number subjects per rep newdata.orig optional input needed calculating KM HR observed data. censor.dur two elements vector specifying duration events censoring. Censoring time calculated uniform distribution two numbers. censoring applied NULL provided. coef.var Boolean specifying whether parametric bootstrap performed survival model coefficients, based variance-covariance matrix. FALSE, prediction interval reflects inherent variability survival events. na.warning Boolean specifying whether warning shown newdata contain subjects missing model variables.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/surv_param_sim_pre_resampled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","text":"survparamsim object contains original survreg class object, newdata, data frame predicted survival profiles.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/surv_param_sim_pre_resampled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation of parametric survival model with an already-resampled dataset — surv_param_sim_pre_resampled","text":"See surv_param_sim() additional details.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for S3 objects in the package — print.survparamsim.hrpi","title":"Methods for S3 objects in the package — print.survparamsim.hrpi","text":"Methods S3 objects package","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for S3 objects in the package — print.survparamsim.hrpi","text":"","code":"# S3 method for survparamsim.hrpi print(x, ...)  # S3 method for survparamsim.hrpi summary(object, ...)  # S3 method for survparamsim.kmpi print(x, ...)  # S3 method for survparamsim.kmpi summary(object, ...)  # S3 method for survparamsim print(x, ...)"},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for S3 objects in the package — print.survparamsim.hrpi","text":"x object corresponding class ... Additional arguments passed methods. object object corresponding class","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of parametric survival model — survparamsim","title":"Simulation of parametric survival model — survparamsim","text":"main function(s) generate predicted survival using model object generated survival::survreg() function.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of parametric survival model — survparamsim","text":"","code":"surv_param_sim(   object,   newdata,   n.rep = 1000,   censor.dur = NULL,   coef.var = TRUE,   na.warning = TRUE )  surv_param_sim_resample(   object,   newdata,   n.rep = 1000,   censor.dur = NULL,   n.resample,   strat.resample = NULL,   coef.var = TRUE,   na.warning = TRUE )"},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of parametric survival model — survparamsim","text":"object survreg class object. Currently accept exponential, lognormal, weibull, loglogistic, gaussian distributions. newdata required data frame simulation contain covariates survival model. required even one used survival::survreg function. also contain columns survival information. can used plot_km_pi() plot_hr_pi() function observed data. Survival information can dummy data, time need long enough simulated KM plot long enough plot_km_pi() draw simulated survival curves. Subjects NA covariates survreg model removed simulation subsequent plotting observed data. n.rep integer defining numbers parametric bootstrap runs censor.dur two elements vector specifying duration events censoring. Censoring time calculated uniform distribution two numbers. censoring applied NULL provided. coef.var Boolean specifying whether parametric bootstrap performed survival model coefficients, based variance-covariance matrix. FALSE, prediction interval reflects inherent variability survival events. na.warning Boolean specifying whether warning shown newdata contain subjects missing model variables. n.resample Number subjects resampled simulations. strat.resample provided, needs vector length equal number categories stratification variable. strat.resample String specifying stratification variable resampling. Currently one variable allowed. need one, create new variable e.g. base::interaction()","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of parametric survival model — survparamsim","text":"survparamsim object contains original survreg class object, newdata, data frame predicted survival profiles following columns: event: event status, 0=censored, 1=event rep: ID parametric bootstrap runs subj: ID subjects newdata (currently original ID retained subj sequentially assigned 1:nrow(newdata))","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation of parametric survival model — survparamsim","text":"surv_param_sim() returns simulation using provided subject newdata , surv_param_sim_resample perform simulation based resampled subjects dataset. latter allows flexibility terms simulating future trials different number subjects. Note surv_param_sim_resample(), automatic safeguard ensure certain number subjects subgroup treatment groups, may result inconsistent number subjects per simulation leads Cox regression instability due small N. Consider using stratified resampling case. Currently tested whether function work survreg model stratification variables.","code":""},{"path":"https://yoshidk6.github.io/survParamSim/reference/survparamsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation of parametric survival model — survparamsim","text":"","code":"library(survival)  fit.lung <- survreg(Surv(time, status) ~ sex + ph.ecog, data = lung)  object <- fit.lung n.rep  <-  30 newdata <-   tibble::as_tibble(dplyr::select(lung, time, status, sex, ph.ecog)) %>%   tidyr::drop_na() censor.dur <- c(200, 1100)  sim <- surv_param_sim(object, newdata, n.rep, censor.dur)"},{"path":[]},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-016","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.6","title":"survParamSim 0.1.6","text":"CRAN release: 2022-06-03","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-6","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.6","text":"Fix error variable included group trt calc_km_pi()","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-015","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.5","title":"survParamSim 0.1.5","text":"CRAN release: 2021-04-26","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.5","text":"New function extract_medsurv_delta_pi() return prediction intervals difference median survival time treatment extract_median_surv() function deprecated superseded extract_medsurv_pi() consistent name conventions New function extract_medsurv() return raw median survival time per simulation New function surv_param_sim_pre_resampled() enables simulation already resampled dataset New function calc_km_pi() shows warning survival simulations median survival times reached calc_hr_pi() can now calculate hazard ratios dataset two treatment groups","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-014","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.4","title":"survParamSim 0.1.4","text":"CRAN release: 2020-12-08","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.4","text":"Bug fix - use vdiffr conditionally tests","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-013","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.3","title":"survParamSim 0.1.3","text":"CRAN release: 2020-11-24","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.3","text":"Bug fix - disable options(lifecycle_verbosity = \"error\") avoid unnecessary errors","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-012","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.2","title":"survParamSim 0.1.2","text":"CRAN release: 2020-06-18","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.2","text":"Bug fix surv_param_sim_resample() tidyr >= 1.0.0","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-011","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.1","title":"survParamSim 0.1.1","text":"CRAN release: 2020-05-12","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"minor-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"survParamSim 0.1.1","text":"Fix unit test code work dplyr 1.0.0 Add example outputs Readme vignette","code":""},{"path":"https://yoshidk6.github.io/survParamSim/news/index.html","id":"survparamsim-010","dir":"Changelog","previous_headings":"","what":"survParamSim 0.1.0","title":"survParamSim 0.1.0","text":"CRAN release: 2020-01-13 Initial release","code":""}]
